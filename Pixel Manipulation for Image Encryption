from PIL import Image
import numpy as np

def encrypt_image(input_path, output_path, key):
    # Open the image
    img = Image.open(input_path)
    pixels = np.array(img)
    
    # Encryption: add key value to each pixel
    encrypted_pixels = (pixels + key) % 256
    
    # Save the encrypted image
    encrypted_img = Image.fromarray(encrypted_pixels.astype('uint8'))
    encrypted_img.save(output_path)
    print("Image encrypted successfully!")

def decrypt_image(input_path, output_path, key):
    # Open the encrypted image
    img = Image.open(input_path)
    pixels = np.array(img)
    
    # Decryption: subtract key value from each pixel
    decrypted_pixels = (pixels - key) % 256
    
    # Save the decrypted image
    decrypted_img = Image.fromarray(decrypted_pixels.astype('uint8'))
    decrypted_img.save(output_path)
    print("Image decrypted successfully!")

if _name_ == "_main_":
    import sys
    
    if len(sys.argv) != 5:
        print("Usage: python3 image_encryptor.py <encrypt/decrypt> <input_image> <output_image> <key>")
        sys.exit(1)
    
    mode = sys.argv[1]
    input_image = sys.argv[2]
    output_image = sys.argv[3]
    key = int(sys.argv[4])
    
    if mode == "encrypt":
        encrypt_image(input_image, output_image, key)
    elif mode == "decrypt":
        decrypt_image(input_image, output_image, key)
    else:
        print("Invalid mode. Use 'encrypt' or 'decrypt'.")
